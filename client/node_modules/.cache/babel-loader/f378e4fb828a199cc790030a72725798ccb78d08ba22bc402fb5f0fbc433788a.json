{"ast":null,"code":"// export const scroll = (targetValue, duration) => {\n//     const startValue = parseInt(window.scrollY);\n//     const distance = targetValue+10 - startValue;\n//     const startTime = performance.now();\n//     function animationStep() {\n//         const elapsed = performance.now() - startTime;\n//         const progress = Math.min(elapsed / duration, 1);\n//         const currentValue = startValue + distance * progress;\n//         window.scrollTo(0, currentValue);\n//         if (progress < 1) {\n//             requestAnimationFrame(animationStep);\n//         }else{\n//             console.log('stop')\n//         }   \n//      }\n\n//     requestAnimationFrame(animationStep);\n// }\n\nlet requestId;\nfunction animation(target) {\n  const currentValue = parseInt(window.scrollY);\n  let step = (target - currentValue) / 20;\n  if (step < 0 && step > -1) {\n    step = -1;\n  } else if (step < 1 && step > 0) {\n    step = 1;\n  }\n  window.scrollBy(0, step);\n  console.log(Math.ceil((target - currentValue) / 20));\n  if (Math.abs(target - currentValue) != 0) {\n    requestId = requestAnimationFrame(() => animation(target));\n  } else {\n    console.log(\"stop\");\n  }\n}\nexport const scroll = target => {\n  cancelAnimationFrame(requestId);\n  animation(target);\n};","map":{"version":3,"names":["requestId","animation","target","currentValue","parseInt","window","scrollY","step","scrollBy","console","log","Math","ceil","abs","requestAnimationFrame","scroll","cancelAnimationFrame"],"sources":["/Users/yutongzhu/Documents/github-repo/My-Personal-Website/src/Animation/scroll.animate.js"],"sourcesContent":["// export const scroll = (targetValue, duration) => {\n//     const startValue = parseInt(window.scrollY);\n//     const distance = targetValue+10 - startValue;\n//     const startTime = performance.now();\n//     function animationStep() {\n//         const elapsed = performance.now() - startTime;\n//         const progress = Math.min(elapsed / duration, 1);\n//         const currentValue = startValue + distance * progress;\n//         window.scrollTo(0, currentValue);\n//         if (progress < 1) {\n//             requestAnimationFrame(animationStep);\n//         }else{\n//             console.log('stop')\n//         }   \n//      }\n\n//     requestAnimationFrame(animationStep);\n// }\n\nlet requestId;\n\nfunction animation(target) {\n  const currentValue = parseInt(window.scrollY);\n  let step = (target - currentValue) / 20;\n  if (step < 0 && step > -1) {\n    step = -1;\n  } else if (step < 1 && step > 0) {\n    step = 1;\n  }\n  window.scrollBy(0, step);\n  console.log(Math.ceil((target - currentValue) / 20));\n  if (Math.abs(target - currentValue)!=0) {\n    requestId = requestAnimationFrame(() => animation(target));\n  } else {\n    console.log(\"stop\");\n  }\n}\n\nexport const scroll = (target) => {\n  cancelAnimationFrame(requestId);\n  animation(target);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAIA,SAAS;AAEb,SAASC,SAASA,CAACC,MAAM,EAAE;EACzB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,MAAM,CAACC,OAAO,CAAC;EAC7C,IAAIC,IAAI,GAAG,CAACL,MAAM,GAAGC,YAAY,IAAI,EAAE;EACvC,IAAII,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,CAAC,CAAC,EAAE;IACzBA,IAAI,GAAG,CAAC,CAAC;EACX,CAAC,MAAM,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,CAAC,EAAE;IAC/BA,IAAI,GAAG,CAAC;EACV;EACAF,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAED,IAAI,CAAC;EACxBE,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,CAACV,MAAM,GAAGC,YAAY,IAAI,EAAE,CAAC,CAAC;EACpD,IAAIQ,IAAI,CAACE,GAAG,CAACX,MAAM,GAAGC,YAAY,CAAC,IAAE,CAAC,EAAE;IACtCH,SAAS,GAAGc,qBAAqB,CAAC,MAAMb,SAAS,CAACC,MAAM,CAAC,CAAC;EAC5D,CAAC,MAAM;IACLO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACrB;AACF;AAEA,OAAO,MAAMK,MAAM,GAAIb,MAAM,IAAK;EAChCc,oBAAoB,CAAChB,SAAS,CAAC;EAC/BC,SAAS,CAACC,MAAM,CAAC;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}